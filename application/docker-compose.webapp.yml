version: "3.8"

services:
  mongodb:
    image: mongo:6-jammy
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.runCommand({ ping: 1 }).ok' || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 60

  api:
    image: team1acrmanual9.azurecr.io/api:latest
    environment:
      PORT: "4000"
      MONGO_URI: "mongodb://mongodb:27017/dobook"
    depends_on:
      - mongodb
    command: ["node","server.js"]
    restart: always

  mongo-seed:
    image: team1acrmanual9.azurecr.io/db-seed:latest
    environment:
      MONGO_URI: "mongodb://mongodb:27017/dobook"
    depends_on:
      - mongodb
    command: >
      sh -lc "echo 'waiting for mongo...';
      for i in $(seq 1 120); do
        mongosh --host mongodb:27017 --quiet --eval 'db.runCommand({ ping: 1 }).ok' && break || sleep 2;
      done;
      node seed.js;
      echo 'seed done'"
    restart: "no"

  frontend:
    image: team1acrmanual9.azurecr.io/frontend:latest
    depends_on:
      - api
    restart: always

  edge:
    image: nginx:alpine
    depends_on:
      - api
      - frontend
    ports:
      - "80:80"
    command: >
      sh -lc "cat > /etc/nginx/nginx.conf <<'EOF'
      worker_processes  1;
      events { worker_connections 1024; }
      http {
        include       mime.types;
        sendfile      on;
        server {
          listen 80;

          location / {
            proxy_pass http://frontend:80;
            proxy_set_header Host \$host;
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_http_version 1.1;
          }

          location /api/ {
            proxy_pass http://api:4000/;
            proxy_set_header Host \$host;
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_http_version 1.1;
          }
        }
      }
      EOF
      nginx -g 'daemon off;'"
    restart: always
