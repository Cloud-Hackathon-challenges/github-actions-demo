# version: "3.8"

# services:
#   mongodb:
#     image: mongo:6-jammy
#     restart: always
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo-data:/data/db
#     healthcheck:
#       test: ["CMD-SHELL", "mongosh --quiet --eval 'db.runCommand({ ping: 1 }).ok' || exit 1"]
#       interval: 5s
#       timeout: 5s
#       retries: 20

#   api:
#     build:
#       context: ./api
#     environment:
#       PORT: 4000
#       MONGO_URI: mongodb://mongodb:27017/dobook
#       MONGO_URL: mongodb://mongodb:27017/dobook   # kod MONGO_URL okuyorsa da Ã§alÄ±ÅŸsÄ±n
#     depends_on:
#       mongodb:
#         condition: service_healthy
#     ports:
#       - "4000:4000"
#     command: ["node", "server.js"]
#     restart: always

#   mongo-seed:
#     build:
#       context: ./db-seed
#       args:
#         HOST: mongodb
#         PORT: 27017
#     environment:
#       MONGO_URI: mongodb://mongodb:27017/dobook   # ðŸ”‘ seed.js bunu kullansÄ±n
#     depends_on:
#       mongodb:
#         condition: service_healthy
#     command: >
#       sh -lc "echo 'waiting for mongo...';
#       for i in $(seq 1 60); do
#         mongosh --host mongodb:27017 --quiet --eval 'db.runCommand({ ping: 1 }).ok' && break || sleep 2;
#       done;
#       node seed.js;
#       echo 'seed done';
#       tail -f /dev/null"
#     restart: "no"

#   frontend:
#     build:
#       context: ./frontend
#     environment:
#       API_HOST: api
#       API_PORT: 4000
#     depends_on:
#       - api
#     ports:
#       - "8080:80"
#     restart: always

# volumes:
#   mongo-data:

version: "3.8"

services:
  mongodb:
    image: mongo:6-jammy
    restart: always
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.runCommand({ ping: 1 }).ok' || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 20

  api:
    image: team1acrmanual9.azurecr.io/api:latest
    environment:
      PORT: "4000"
      MONGO_URI: "mongodb://mongodb:27017/dobook"
      MONGO_URL: "mongodb://mongodb:27017/dobook"
    depends_on:
      mongodb:
        condition: service_healthy
    ports:
      - "4000:4000"
    command: ["node","server.js"]
    restart: always

  mongo-seed:
    image: team1acrmanual9.azurecr.io/db-seed:latest
    environment:
      MONGO_URI: "mongodb://mongodb:27017/dobook"
    depends_on:
      mongodb:
        condition: service_healthy
    command: >
      sh -lc "echo 'waiting for mongo...';
      for i in $(seq 1 120); do
        mongosh --host mongodb:27017 --quiet --eval 'db.runCommand({ ping: 1 }).ok' && break || sleep 2;
      done;
      node seed.js;
      echo 'seed done';
      tail -f /dev/null"
    restart: "no"

  frontend:
    image: team1acrmanual9.azurecr.io/frontend:latest
    depends_on:
      api:
        condition: service_started
    ports:
      - "8080:80"
    restart: always

  edge:
    image: nginx:alpine
    depends_on:
      api:
        condition: service_started
      frontend:
        condition: service_started
    ports:
      - "80:80" # This is the public port Azure exposes
    command: >
      sh -lc "cat > /etc/nginx/nginx.conf <<'EOF'
      worker_processes  1;
      events { worker_connections 1024; }
      http {
        include       mime.types;
        sendfile      on;
        server {
          listen 80;

          location / {
            proxy_pass http://frontend:80;
            proxy_set_header Host \$host;
            proxy_set_header X-Real-IP \$remote_addr;
          }

          location /api/ {
            proxy_pass http://api:4000/;
            proxy_set_header Host \$host;
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_http_version 1.1;
          }
        }
      }
      EOF
      nginx -g 'daemon off;'"
    restart: always
