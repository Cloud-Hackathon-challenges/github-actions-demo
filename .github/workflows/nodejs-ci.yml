jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
        project: [frontend, api]
    defaults:
      run:
        working-directory: application/${{ matrix.project }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: application/${{ matrix.project }}/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test || echo "tests failed (not blocking)"
      - name: Run audit (show security warnings, but continue)
        run: npm audit || true
      - name: Simple lint check for API project
        if: matrix.project == 'api'
        run: |
          echo "Linting API: Kontrol ediliyor..."
          grep -rIn '[^;]$' . --include=*.js || echo "Semikolon kontrolü tamamlandı"

  docker-build-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push frontend image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest ./application/frontend
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest

      - name: Build and Push api image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/api:latest ./application/api
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/api:latest
          

      - name: Build and Push db-seed image 2
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/db-seed:latest ./application/db-seed
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/db-seed:latest
