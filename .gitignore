# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm/
.yarn/
/application/*/build/
/application/*/dist/
/application/*/coverage/
/application/*/tmp/
/application/*/log/
/application/*/*.env # .env Dateien in den Anwendungsprojekten
/application/*/node_modules/ # Sicherstellen, dass node_modules in Unterordnern ignoriert wird
/application/*/package-lock.json # Nur ignorieren, wenn Sie Yarn verwenden und package-lock.json nicht committen wollen
/application/*/yarn.lock # Nur ignorieren, wenn Sie NPM verwenden und yarn.lock nicht committen wollen

# Docker
*.pem # Generierte Zertifikate
*.key # Generierte Schlüssel
*.crt # Generierte Zertifikate
.dockerignore # Oft selbst ein Ausschluss, aber der Vollständigkeit halber
volumes/ # Wenn Docker-Volumes lokal gespeichert werden

# Terraform
.terraform/ # Terraform Zustandsverzeichnis
*.tfstate    # Terraform Zustand (NICHT ins Git pushen!)
*.tfstate.* # Zustandssicherungen und andere Zustandsdateien
.terraform.lock.hcl # Optional: Wenn Sie diese Datei nicht im Git haben wollen (oft wird sie committed)
.terraformrc
terraform.tfvars # WICHTIG: Ihre variablen.tfvars-Datei mit Geheimnissen
*.tfvars.json    # Auch JSON-formatierte tfvars-Dateien
crash.log        # Terraform Crash-Logs
terraform/.terraform/
crash.*.log


# Environment variables
.env
.env.*
!.env.example # Wenn Sie eine Vorlage für .env-Dateien haben möchten

# IDE- und OS-spezifische Dateien
.DS_Store
Thumbs.db
.vscode/ # Visual Studio Code Konfigurationsdateien
.idea/   # IntelliJ / WebStorm IDE Konfigurationsdateien
*.swp    # Vim temporäre Dateien
*~       # Emacs/Vim Backup-Dateien
.history/ # VS Code oder andere History-Ordner
*.log    # Allgemeine Log-Dateien
*.backup # Allgemeine Backup-Dateien

# Binary files and compiled assetss
*.exe
*.dll
*.so
*.o
*.out
*.obj
*.bin
# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
terraform/dev.tfvarsterraform/*.tfstate
terraform/*.tfstate
terraform.tfstate
